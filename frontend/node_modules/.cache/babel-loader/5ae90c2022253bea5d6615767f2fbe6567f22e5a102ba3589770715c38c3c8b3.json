{"ast":null,"code":"var _jsxFileName = \"/Users/abhi/Documents/GitHub/RecipeAgent/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Room, RoomEvent, Track } from 'livekit-client';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LIVEKIT_URL = process.env.REACT_APP_LIVEKIT_URL || 'ws://localhost:7880';\nconst LIVEKIT_API_KEY = process.env.LIVEKIT_API_KEY || '';\nconst LIVEKIT_API_SECRET = process.env.LIVEKIT_API_SECRET || '';\nfunction App() {\n  _s();\n  const [room, setRoom] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [transcript, setTranscript] = useState([]);\n  const [error, setError] = useState(null);\n  const [audioEnabled, setAudioEnabled] = useState(true);\n  const transcriptRef = useRef(null);\n  const audioElRef = useRef(null);\n\n  // Auto-scroll transcript to bottom\n  useEffect(() => {\n    if (transcriptRef.current) {\n      transcriptRef.current.scrollTop = transcriptRef.current.scrollHeight;\n    }\n  }, [transcript]);\n  const generateAccessToken = async () => {\n    try {\n      // In a real app, this should be done on your backend\n      // For now, we'll use a simple room name and participant identity\n      const response = await fetch('http://localhost:8000/api/token', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          room: 'recipe-agent-room',\n          identity: `user-${Date.now()}`\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to get access token');\n      }\n      const data = await response.json();\n      return data.token;\n    } catch (err) {\n      // Remove the fallback call\n      // console.warn('Using client-side token generation (not secure for production)');\n      // return generateClientSideToken();\n\n      // Just throw the error directly\n      throw new Error(`Failed to get access token: ${err.message}`);\n    }\n  };\n  const startCall = async () => {\n    try {\n      setIsConnecting(true);\n      setError(null);\n\n      // Create room instance\n      const newRoom = new Room({\n        adaptiveStream: true,\n        dynacast: true\n      });\n\n      // Set up event listeners\n      newRoom.on(RoomEvent.Connected, () => {\n        console.log('Connected to room');\n        setIsConnected(true);\n        setIsConnecting(false);\n      });\n      newRoom.on(RoomEvent.Disconnected, () => {\n        console.log('Disconnected from room');\n        setIsConnected(false);\n        setRoom(null);\n      });\n      newRoom.on(RoomEvent.ParticipantConnected, participant => {\n        console.log('Participant connected:', participant.identity);\n        setupParticipantEvents(participant);\n      });\n\n      // Register text stream handler for transcriptions (agent + user)\n      newRoom.registerTextStreamHandler('lk.transcription', async (reader, participantInfo) => {\n        try {\n          const message = await reader.readAll();\n          const from = (participantInfo === null || participantInfo === void 0 ? void 0 : participantInfo.identity) || 'Unknown';\n          const isSelf = from === newRoom.localParticipant.identity;\n          addToTranscript({\n            speaker: isSelf ? 'You' : 'Chef Ramsay',\n            text: message,\n            type: 'transcription'\n          });\n        } catch (e) {\n          console.error('Failed to handle transcription stream:', e);\n        }\n      });\n      newRoom.on(RoomEvent.LocalTrackPublished, publication => {\n        console.log('Local track published:', publication.trackName);\n      });\n\n      // Render remote audio\n      newRoom.on(RoomEvent.TrackSubscribed, (track, publication, participant) => {\n        console.log('Track subscribed:', publication.trackName, track.kind, 'from', participant.identity);\n        if (track.kind === Track.Kind.Audio && audioElRef.current) {\n          try {\n            track.attach(audioElRef.current);\n          } catch (e) {\n            console.warn('Failed to attach audio track:', e);\n          }\n        }\n      });\n\n      // Get access token\n      const token = await generateAccessToken();\n      if (!token) {\n        throw new Error('Failed to generate access token. Please check your configuration.');\n      }\n\n      // Connect to room\n      await newRoom.connect(LIVEKIT_URL, token);\n      // Unlock audio playback (must be called in a user gesture)\n      try {\n        await newRoom.startAudio();\n      } catch (e) {\n        console.warn('startAudio failed; user interaction required?', e);\n      }\n\n      // Enable microphone only (no camera needed)\n      await newRoom.localParticipant.setMicrophoneEnabled(true);\n      setRoom(newRoom);\n    } catch (err) {\n      console.error('Failed to start call:', err);\n      setError(err.message);\n      setIsConnecting(false);\n    }\n  };\n  const setupParticipantEvents = participant => {\n    // Keep for debugging other tracks; transcription is handled via text stream above\n    participant.on('trackSubscribed', (track, publication) => {\n      console.log('Subscribed to media track:', publication.trackName, track.kind, 'from', participant.identity);\n    });\n  };\n  const addToTranscript = data => {\n    const timestamp = new Date().toLocaleTimeString();\n    setTranscript(prev => [...prev, {\n      id: Date.now(),\n      timestamp,\n      speaker: data.speaker || 'Unknown',\n      text: data.text || data.message || '',\n      type: data.type || 'speech'\n    }]);\n  };\n  const endCall = async () => {\n    if (room) {\n      await room.disconnect();\n      setRoom(null);\n      setIsConnected(false);\n      setTranscript([]);\n    }\n  };\n  const toggleMicrophone = async () => {\n    if (room && room.localParticipant) {\n      if (audioEnabled) {\n        await room.localParticipant.setMicrophoneEnabled(false);\n      } else {\n        await room.localParticipant.setMicrophoneEnabled(true);\n      }\n      setAudioEnabled(!audioEnabled);\n    }\n  };\n  const clearTranscript = () => {\n    setTranscript([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uD83C\\uDF73 Chef Ramsay Recipe Agent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your demanding AI cooking mentor powered by voice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: !isConnected ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-large\",\n          onClick: startCall,\n          disabled: isConnecting,\n          children: isConnecting ? 'Connecting...' : '🎤 Start Call'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"call-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger btn-large\",\n            onClick: endCall,\n            children: \"\\uD83D\\uDCDE End Call\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn ${audioEnabled ? 'btn-warning' : 'btn-success'}`,\n            onClick: toggleMicrophone,\n            children: audioEnabled ? '🔇 Mute' : '🎤 Unmute'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: clearTranscript,\n            children: \"\\uD83D\\uDDD1\\uFE0F Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioElRef,\n        autoPlay: true,\n        playsInline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u274C Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Make sure your LiveKit server is running and configuration is correct.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status-indicator ${isConnected ? 'connected' : 'disconnected'}`,\n          children: isConnected ? '🟢 Connected' : '🔴 Disconnected'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), isConnected && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"audio-status\",\n          children: audioEnabled ? '🎤 Microphone On' : '🔇 Microphone Off'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcript-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transcript-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDCDD Live Transcript\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"transcript-count\",\n            children: [transcript.length, \" messages\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transcript\",\n          ref: transcriptRef,\n          children: transcript.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transcript-empty\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uD83C\\uDF99\\uFE0F Start speaking to see the live transcript...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Ask Chef Ramsay about recipes, meal prep, or cooking techniques!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this) : transcript.map(entry => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `transcript-entry ${entry.speaker.toLowerCase()}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"transcript-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"speaker\",\n                children: entry.speaker\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"timestamp\",\n                children: entry.timestamp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"transcript-text\",\n              children: entry.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this)]\n          }, entry.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Powered by LiveKit \\u2022 Built with React\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Ask about recipes, ingredient substitutions, or cooking techniques!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SN7Vy3/R6TdB8N3AVLW6fSLG3HI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Room","RoomEvent","Track","jsxDEV","_jsxDEV","LIVEKIT_URL","process","env","REACT_APP_LIVEKIT_URL","LIVEKIT_API_KEY","LIVEKIT_API_SECRET","App","_s","room","setRoom","isConnected","setIsConnected","isConnecting","setIsConnecting","transcript","setTranscript","error","setError","audioEnabled","setAudioEnabled","transcriptRef","audioElRef","current","scrollTop","scrollHeight","generateAccessToken","response","fetch","method","headers","body","JSON","stringify","identity","Date","now","ok","Error","data","json","token","err","message","startCall","newRoom","adaptiveStream","dynacast","on","Connected","console","log","Disconnected","ParticipantConnected","participant","setupParticipantEvents","registerTextStreamHandler","reader","participantInfo","readAll","from","isSelf","localParticipant","addToTranscript","speaker","text","type","e","LocalTrackPublished","publication","trackName","TrackSubscribed","track","kind","Kind","Audio","attach","warn","connect","startAudio","setMicrophoneEnabled","timestamp","toLocaleTimeString","prev","id","endCall","disconnect","toggleMicrophone","clearTranscript","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","ref","autoPlay","playsInline","length","map","entry","toLowerCase","_c","$RefreshReg$"],"sources":["/Users/abhi/Documents/GitHub/RecipeAgent/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Room, RoomEvent, Track } from 'livekit-client';\nimport './App.css';\n\nconst LIVEKIT_URL = process.env.REACT_APP_LIVEKIT_URL || 'ws://localhost:7880';\nconst LIVEKIT_API_KEY = process.env.LIVEKIT_API_KEY || '';\nconst LIVEKIT_API_SECRET = process.env.LIVEKIT_API_SECRET || '';\n\nfunction App() {\n  const [room, setRoom] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [transcript, setTranscript] = useState([]);\n  const [error, setError] = useState(null);\n  const [audioEnabled, setAudioEnabled] = useState(true);\n  const transcriptRef = useRef(null);\n  const audioElRef = useRef(null);\n\n  // Auto-scroll transcript to bottom\n  useEffect(() => {\n    if (transcriptRef.current) {\n      transcriptRef.current.scrollTop = transcriptRef.current.scrollHeight;\n    }\n  }, [transcript]);\n\n  const generateAccessToken = async () => {\n    try {\n      // In a real app, this should be done on your backend\n      // For now, we'll use a simple room name and participant identity\n      const response = await fetch('http://localhost:8000/api/token', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          room: 'recipe-agent-room',\n          identity: `user-${Date.now()}`,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to get access token');\n      }\n\n      const data = await response.json();\n      return data.token;\n    } catch (err) {\n        // Remove the fallback call\n        // console.warn('Using client-side token generation (not secure for production)');\n        // return generateClientSideToken();\n        \n        // Just throw the error directly\n        throw new Error(`Failed to get access token: ${err.message}`);\n    }\n    \n  };\n\n  const startCall = async () => {\n    try {\n      setIsConnecting(true);\n      setError(null);\n\n      // Create room instance\n      const newRoom = new Room({\n        adaptiveStream: true,\n        dynacast: true,\n      });\n\n      // Set up event listeners\n      newRoom.on(RoomEvent.Connected, () => {\n        console.log('Connected to room');\n        setIsConnected(true);\n        setIsConnecting(false);\n      });\n\n      newRoom.on(RoomEvent.Disconnected, () => {\n        console.log('Disconnected from room');\n        setIsConnected(false);\n        setRoom(null);\n      });\n\n      newRoom.on(RoomEvent.ParticipantConnected, (participant) => {\n        console.log('Participant connected:', participant.identity);\n        setupParticipantEvents(participant);\n      });\n\n      // Register text stream handler for transcriptions (agent + user)\n      newRoom.registerTextStreamHandler('lk.transcription', async (reader, participantInfo) => {\n        try {\n          const message = await reader.readAll();\n          const from = participantInfo?.identity || 'Unknown';\n          const isSelf = from === newRoom.localParticipant.identity;\n          addToTranscript({\n            speaker: isSelf ? 'You' : 'Chef Ramsay',\n            text: message,\n            type: 'transcription',\n          });\n        } catch (e) {\n          console.error('Failed to handle transcription stream:', e);\n        }\n      });\n\n      newRoom.on(RoomEvent.LocalTrackPublished, (publication) => {\n        console.log('Local track published:', publication.trackName);\n      });\n\n      // Render remote audio\n      newRoom.on(RoomEvent.TrackSubscribed, (track, publication, participant) => {\n        console.log('Track subscribed:', publication.trackName, track.kind, 'from', participant.identity);\n        if (track.kind === Track.Kind.Audio && audioElRef.current) {\n          try {\n            track.attach(audioElRef.current);\n          } catch (e) {\n            console.warn('Failed to attach audio track:', e);\n          }\n        }\n      });\n\n      // Get access token\n      const token = await generateAccessToken();\n      if (!token) {\n        throw new Error('Failed to generate access token. Please check your configuration.');\n      }\n\n      // Connect to room\n      await newRoom.connect(LIVEKIT_URL, token);\n      // Unlock audio playback (must be called in a user gesture)\n      try {\n        await newRoom.startAudio();\n      } catch (e) {\n        console.warn('startAudio failed; user interaction required?', e);\n      }\n      \n      // Enable microphone only (no camera needed)\n      await newRoom.localParticipant.setMicrophoneEnabled(true);\n      \n      setRoom(newRoom);\n    } catch (err) {\n      console.error('Failed to start call:', err);\n      setError(err.message);\n      setIsConnecting(false);\n    }\n  };\n\n  const setupParticipantEvents = (participant) => {\n    // Keep for debugging other tracks; transcription is handled via text stream above\n    participant.on('trackSubscribed', (track, publication) => {\n      console.log('Subscribed to media track:', publication.trackName, track.kind, 'from', participant.identity);\n    });\n  };\n\n  const addToTranscript = (data) => {\n    const timestamp = new Date().toLocaleTimeString();\n    setTranscript(prev => [...prev, {\n      id: Date.now(),\n      timestamp,\n      speaker: data.speaker || 'Unknown',\n      text: data.text || data.message || '',\n      type: data.type || 'speech'\n    }]);\n  };\n\n  const endCall = async () => {\n    if (room) {\n      await room.disconnect();\n      setRoom(null);\n      setIsConnected(false);\n      setTranscript([]);\n    }\n  };\n\n  const toggleMicrophone = async () => {\n    if (room && room.localParticipant) {\n      if (audioEnabled) {\n        await room.localParticipant.setMicrophoneEnabled(false);\n      } else {\n        await room.localParticipant.setMicrophoneEnabled(true);\n      }\n      setAudioEnabled(!audioEnabled);\n    }\n  };\n\n  const clearTranscript = () => {\n    setTranscript([]);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <header className=\"header\">\n          <h1>🍳 Chef Ramsay Recipe Agent</h1>\n          <p>Your demanding AI cooking mentor powered by voice</p>\n        </header>\n\n        <div className=\"controls\">\n          {!isConnected ? (\n            <button \n              className=\"btn btn-primary btn-large\"\n              onClick={startCall}\n              disabled={isConnecting}\n            >\n              {isConnecting ? 'Connecting...' : '🎤 Start Call'}\n            </button>\n          ) : (\n            <div className=\"call-controls\">\n              <button \n                className=\"btn btn-danger btn-large\"\n                onClick={endCall}\n              >\n                📞 End Call\n              </button>\n              <button \n                className={`btn ${audioEnabled ? 'btn-warning' : 'btn-success'}`}\n                onClick={toggleMicrophone}\n              >\n                {audioEnabled ? '🔇 Mute' : '🎤 Unmute'}\n              </button>\n              <button \n                className=\"btn btn-secondary\"\n                onClick={clearTranscript}\n              >\n                🗑️ Clear\n              </button>\n            </div>\n          )}\n        </div>\n\n        {/* Hidden audio element for remote audio playback */}\n        <audio ref={audioElRef} autoPlay playsInline />\n\n        {error && (\n          <div className=\"error\">\n            <p>❌ Error: {error}</p>\n            <small>Make sure your LiveKit server is running and configuration is correct.</small>\n          </div>\n        )}\n\n        <div className=\"status\">\n          <div className={`status-indicator ${isConnected ? 'connected' : 'disconnected'}`}>\n            {isConnected ? '🟢 Connected' : '🔴 Disconnected'}\n          </div>\n          {isConnected && (\n            <div className=\"audio-status\">\n              {audioEnabled ? '🎤 Microphone On' : '🔇 Microphone Off'}\n            </div>\n          )}\n        </div>\n\n        <div className=\"transcript-container\">\n          <div className=\"transcript-header\">\n            <h3>📝 Live Transcript</h3>\n            <span className=\"transcript-count\">{transcript.length} messages</span>\n          </div>\n          \n          <div className=\"transcript\" ref={transcriptRef}>\n            {transcript.length === 0 ? (\n              <div className=\"transcript-empty\">\n                <p>🎙️ Start speaking to see the live transcript...</p>\n                <p>Ask Chef Ramsay about recipes, meal prep, or cooking techniques!</p>\n              </div>\n            ) : (\n              transcript.map((entry) => (\n                <div key={entry.id} className={`transcript-entry ${entry.speaker.toLowerCase()}`}>\n                  <div className=\"transcript-meta\">\n                    <span className=\"speaker\">{entry.speaker}</span>\n                    <span className=\"timestamp\">{entry.timestamp}</span>\n                  </div>\n                  <div className=\"transcript-text\">{entry.text}</div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n\n        <footer className=\"footer\">\n          <p>Powered by LiveKit • Built with React</p>\n          <p>Ask about recipes, ingredient substitutions, or cooking techniques!</p>\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}